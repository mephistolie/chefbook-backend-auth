apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chefbook-backend-auth-service.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "chefbook-backend-auth-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chefbook-backend-auth-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chefbook-backend-auth-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.container }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ENVIRONMENT
              value: {{ include "chefbook-backend-auth-service.environment" . }}
            - name: PORT
              value: {{ .Values.service.port | quote }}
            - name: LOGS_PATH
              value: {{ .Values.config.logsPath }}

            # Auth

            - name: SALT_COST
              value: {{ .Values.config.auth.saltCost | quote }}

            - name: ACCESS_TOKEN_SIGNING_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.accessToken.name }}
                  key: {{ .Values.secrets.accessToken.signingKeyRef }}

            - name: ACCESS_TOKEN_TTL
              value: {{ .Values.config.auth.accessTokenTtl }}
            - name: REFRESH_TOKEN_TTL
              value: {{ .Values.config.auth.refreshTokenTtl }}
            - name: PASSWORD_RESET_CODE_TTL
              value: {{ .Values.config.auth.resetPasswordCodeTtl }}

            - name: FIREBASE_CREDENTIALS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.firebase.name }}
                  key: {{ .Values.secrets.firebase.credentialsRef }}
            - name: FIREBASE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.firebase.name }}
                  key: {{ .Values.secrets.firebase.googleApiKeyRef }}

            # OAuth

            - name: GOOGLE_CLIENT_ID
              value: {{ .Values.config.oauth.googleClientId }}
            - name: GOOGLE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.oauth.name }}
                  key: {{ .Values.secrets.oauth.googleClientSecretRef }}

            - name: VK_CLIENT_ID
              value: {{ .Values.config.oauth.vkClientId | quote }}
            - name: VK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.oauth.name }}
                  key: {{ .Values.secrets.oauth.vkClientSecretRef }}

            # Profile deletion

            - name: DELETE_PROFILE_OFFSET
              value: {{ .Values.config.profileDelete.offset }}
            - name: DELETE_PROFILE_CHECK_INTERVAL
              value: {{ .Values.config.profileDelete.checkInterval }}

            # Subscription Microservice

            - name: SUBSCRIPTION_ADDR
              value: "{{ .Values.services.subscription.name }}.{{ .Values.services.subscription.namespace | default .Release.Namespace }}.svc.cluster.local:{{ .Values.services.subscription.port }}"

            # PostgreSQL

            - name: DB_HOST
              value: {{ .Values.config.postgres.host }}
            - name: DB_PORT
              value: {{ .Values.config.postgres.port | quote }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres.name }}
                  key: {{ .Values.secrets.postgres.userRef }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres.name }}
                  key: {{ .Values.secrets.postgres.passwordRef }}
            - name: DB_NAME
              value: {{ .Values.config.postgres.dbName }}

            # RabbitMQ

            - name: AMQP_HOST
              value: "{{ .Values.config.rabbitmq.name }}.{{ .Values.config.rabbitmq.namespace | default .Release.Namespace }}.svc.cluster.local"
            - name: AMQP_PORT
              value: {{ .Values.config.rabbitmq.port | quote }}
            - name: AMQP_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.rabbitmq.name }}
                  key: {{ .Values.secrets.rabbitmq.userRef }}
            - name: AMQP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.rabbitmq.name }}
                  key: {{ .Values.secrets.rabbitmq.passwordRef }}
            - name: AMQP_VHOST
              value: {{ .Values.config.rabbitmq.vhost }}

            # SMTP

            - name: SMTP_HOST
              value: {{ .Values.config.smtp.host }}
            - name: SMTP_PORT
              value: {{ .Values.config.smtp.port | quote }}
            - name: SMTP_EMAIL
              value: {{ .Values.config.smtp.email }}
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.smtp.name }}
                  key: {{ .Values.secrets.smtp.passwordRef }}
            - name: SMTP_ATTEMPTS
              value: {{ .Values.config.smtp.sendAttempts | quote }}

          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            grpc:
              port: {{ .Values.service.port }}
            periodSeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
